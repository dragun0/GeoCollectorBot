variables:
  IMAGE_NAME: geo-collector-bot

workflow:
  rules:
    - if: "$CI_COMMIT_TAG"
    - if: "$CI_COMMIT_BRANCH"

default:
  services:
    - name: docker:19.03.15-dind
      alias: docker
  image: node:fermium-alpine

stages:
  - prepare
  - test
  - post-test
  - package

install-dependencies:
  stage: prepare
  script:
    - yarn install --frozen-lockfile
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - node_modules
      - build

test:
  stage: test
  coverage: "/^Statements\\s*:\\s*([^%]+)/"
  script:
    - yarn lint
    - yarn coverage:ci
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - node_modules
    policy: pull
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml

build:
  stage: post-test
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - node_modules
      - build
  variables:
    NODE_ENV: production
  script:
    - yarn build
  rules:
    - if: "$CI_COMMIT_TAG"
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
  artifacts:
    when: on_success
    expire_in: 1 day
    paths:
      - build

".docker-job":
  image: docker:stable
  stage: package
  variables:
    REMOTE_IMAGE_NAME: "${DOCKER_REGISTRY_USER}/${IMAGE_NAME}"
    DOCKER_PATH: "."
    DOCKER_TAG: latest
    COMMIT_SHA_FILEPATH: "/home/node/commit.sha"
  script:
    - test -z "${CI_COMMIT_TAG}" || export DOCKER_TAG=$(echo ${CI_COMMIT_TAG} | sed s/^v//)
    - echo $DOCKER_REGISTRY_PASSWORD | docker login -u $DOCKER_REGISTRY_USER --password-stdin
    - docker build --build-arg COMMIT_SHA=${CI_COMMIT_SHA} --pull -t ${REMOTE_IMAGE_NAME}:${DOCKER_TAG} ${DOCKER_PATH}
    - test -z "${COMMIT_SHA_FILEPATH}" || docker run --rm ${REMOTE_IMAGE_NAME}:${DOCKER_TAG} cat ${COMMIT_SHA_FILEPATH}
    - docker push ${REMOTE_IMAGE_NAME}:${DOCKER_TAG}
  dependencies:
    - build

docker-latest:
  extends: ".docker-job"
  rules:
    - if: "$CI_COMMIT_TAG"
      when: never
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"

docker-tags:
  extends: ".docker-job"
  rules:
    - if: "$CI_COMMIT_TAG"
